# 45.33.78.89
# mac: /usr/local/etc/nginx/nginx.conf
# ubuntu: /etc/nginx/sites-enabled/
# /etc/nginx/sites-available/default
# nginx -s quit
# nginx -s reload

# test nginx config
# sudo nginx -t

# sudo service nginx stop
# sudo service nginx restart

upstream websocket {
  server 127.0.0.1:8080;
}

map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

# see https://gist.github.com/plentz/6737338
# don't send the nginx version number in error pages and Server header
server_tokens off;

add_header X-Frame-Options SAMEORIGIN;

add_header Content-Security-Policy "frame-ancestors 'self'";
# add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ssl.google-analytics.com https://assets.zendesk.com https://connect.facebook.net; img-src 'self' https://ssl.google-analytics.com https://s-static.ak.facebook.com https://assets.zendesk.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://assets.zendesk.com; font-src 'self' https://themes.googleusercontent.com; frame-src https://assets.zendesk.com https://www.facebook.com https://s-static.ak.facebook.com https://tautt.zendesk.com; object-src 'none'";

#
# Redirect all non-encrypted to encrypted
#
server {
  server_name          viewer.valcu.co;
  listen               *:80;
  listen               [::]:80;
  return 301 https://$host$request_uri;

    listen 443 ssl; # managed by Certbot
ssl_certificate /etc/letsencrypt/live/viewer.valcu.co/fullchain.pem; # managed by Certbot
ssl_certificate_key /etc/letsencrypt/live/viewer.valcu.co/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot


    # Redirect non-https traffic to https
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # } # managed by Certbot

}

server {
  server_name          viewer.valcu.com;
  listen               *:80;
  listen               [::]:80;
  return 301 https://$host$request_uri;

    listen 443 ssl; # managed by Certbot
ssl_certificate /etc/letsencrypt/live/viewer.valcu.co/fullchain.pem; # managed by Certbot
ssl_certificate_key /etc/letsencrypt/live/viewer.valcu.co/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot


    # Redirect non-https traffic to https
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # } # managed by Certbot

}